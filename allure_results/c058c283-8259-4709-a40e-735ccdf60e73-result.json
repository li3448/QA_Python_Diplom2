{"name": "Проверка получения количества заказов \"total_today\" для авторизованного пользователя - 1 заказ", "status": "failed", "statusDetails": {"message": "AssertionError: Получено неверное значение ключа \"totalToday\": ожидалось \"1\", получено \"517\"", "trace": "self = <test_get_user_orders.TestGetUserOrders object at 0x104c60b30>\nsetup_user = ({'email': 'weakidhdox@mail.ru', 'name': 'pqeyeqtqyf', 'password': 'ewgvrfdlwa'}, 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6...WFlOWVkMjgwMDAxYjQ2MDU1OCIsImlhdCI6MTcyMDA3Nzk5OCwiZXhwIjoxNzIwMDc5MTk4fQ.bxlp4d8JloCPp0b3ar_rr-rT_256kw0aLOL2of2Fmlk')\n\n    @allure.title('Проверка получения количества заказов \"total_today\" для авторизованного пользователя - 1 заказ')\n    def test_get_user_orders_total_today_authorized_user(self, setup_user):\n        user_data, auth_token = setup_user\n        ingredients_list = self.__create_burger()\n        HelpersOnCreateUser.create_order(ingredients_list, auth_token)\n        response = HelpersOnCreateUser.try_to_get_user_orders(auth_token)\n    \n        received_body = HelpersOnCheck.check_success_ok(response)\n>       HelpersOnCheck.check_received_orders_total_today(received_body, 1)\n\ntests/test_get_user_orders.py:71: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nhelpers.py:191: in check_received_orders_total_today\n    HelpersOnCheck.check_key_and_value_in_body(received_body, KEYS.TOTAL_TODAY_KEY, amount)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse_body = {'orders': [{'_id': '66864eae9ed280001b46055a', 'createdAt': '2024-07-04T07:26:38.387Z', 'ingredients': ['61c0c5a71d1f...daaa72'], 'name': 'Spicy бессмертный флюоресцентный бургер', ...}], 'success': True, 'total': 91975, 'totalToday': 517}\nkey = 'totalToday', value = 1\n\n    @staticmethod\n    @allure.step('Проверяем значение ключа в ответе')\n    def check_key_and_value_in_body(response_body, key, value):\n        # проверяем наличие ключа в ответе\n        assert key in response_body, f'В ответе отсутствует ключ \"{key}\", получен ответ: \"{response_body}\"'\n        # проверяем значение ключа в ответе\n        received_value = response_body[key]\n>       assert received_value == value, f'Получено неверное значение ключа \"{key}\": ожидалось \"{value}\", получено \"{received_value}\"'\nE       AssertionError: Получено неверное значение ключа \"totalToday\": ожидалось \"1\", получено \"517\"\n\nhelpers.py:24: AssertionError"}, "steps": [{"name": "Собираем бургер для заказа", "status": "passed", "start": 1720077998073, "stop": 1720077998073}, {"name": "Создаем заказ и проверяем полученные в ответе данные", "status": "passed", "steps": [{"name": "Отправляем запрос на создание заказа", "status": "passed", "steps": [{"name": "Отправляем API-запрос на создание заказа", "status": "passed", "parameters": [{"name": "payload", "value": "{'ingredients': ['61c0c5a71d1f82001bdaaa6d', '61c0c5a71d1f82001bdaaa6f', '61c0c5a71d1f82001bdaaa72']}"}, {"name": "headers", "value": "{'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2ODY0ZWFlOWVkMjgwMDAxYjQ2MDU1OCIsImlhdCI6MTcyMDA3Nzk5OCwiZXhwIjoxNzIwMDc5MTk4fQ.bxlp4d8JloCPp0b3ar_rr-rT_256kw0aLOL2of2Fmlk'}"}], "start": 1720077998073, "stop": 1720077999451}], "parameters": [{"name": "ingredient_list", "value": "['61c0c5a71d1f82001bdaaa6d', '61c0c5a71d1f82001bdaaa6f', '61c0c5a71d1f82001bdaaa72']"}, {"name": "auth_token", "value": "'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2ODY0ZWFlOWVkMjgwMDAxYjQ2MDU1OCIsImlhdCI6MTcyMDA3Nzk5OCwiZXhwIjoxNzIwMDc5MTk4fQ.bxlp4d8JloCPp0b3ar_rr-rT_256kw0aLOL2of2Fmlk'"}], "start": 1720077998073, "stop": 1720077999451}, {"name": "Проверяем код ответа", "status": "passed", "parameters": [{"name": "response", "value": "<Response [200]>"}, {"name": "expected_code", "value": "200"}], "start": 1720077999452, "stop": 1720077999452}, {"name": "Проверяем значение поля \"success\" в ответе", "status": "passed", "parameters": [{"name": "response", "value": "<Response [200]>"}, {"name": "expected_value", "value": "True"}], "start": 1720077999452, "stop": 1720077999452}, {"name": "Проверяем наличие ключа в ответе", "status": "passed", "parameters": [{"name": "response_body", "value": "{'success': True, 'name': 'Spicy бессмертный флюоресцентный бургер', 'order': {'ingredients': [{'_id': '61c0c5a71d1f82001bdaaa6d', 'name': 'Флюоресцентная булка R2-D3', 'type': 'bun', 'proteins': 44, 'fat': 26, 'carbohydrates': 85, 'calories': 643, 'price': 988, 'image': 'https://code.s3.yandex.net/react/code/bun-01.png', 'image_mobile': 'https://code.s3.yandex.net/react/code/bun-01-mobile.png', 'image_large': 'https://code.s3.yandex.net/react/code/bun-01-large.png', '__v': 0}, {'_id': '61c0c5a71d1f82001bdaaa6f', 'name': 'Мясо бессмертных моллюсков Protostomia', 'type': 'main', 'proteins': 433, 'fat': 244, 'carbohydrates': 33, 'calories': 420, 'price': 1337, 'image': 'https://code.s3.yandex.net/react/code/meat-02.png', 'image_mobile': 'https://code.s3.yandex.net/react/code/meat-02-mobile.png', 'image_large': 'https://code.s3.yandex.net/react/code/meat-02-large.png', '__v': 0}, {'_id': '61c0c5a71d1f82001bdaaa72', 'name': 'Соус Spicy-X', 'type': 'sauce', 'proteins': 30, 'fat': 20, 'carbohydrates': 40, 'calories': 30, 'price': 90, 'image': 'https://code.s3.yandex.net/react/code/sauce-02.png', 'image_mobile': 'https://code.s3.yandex.net/react/code/sauce-02-mobile.png', 'image_large': 'https://code.s3.yandex.net/react/code/sauce-02-large.png', '__v': 0}], '_id': '66864eae9ed280001b46055a', 'owner': {'name': 'pqeyeqtqyf', 'email': 'weakidhdox@mail.ru', 'createdAt': '2024-07-04T07:26:38.079Z', 'updatedAt': '2024-07-04T07:26:38.079Z'}, 'status': 'done', 'name': 'Spicy бессмертный флюоресцентный бургер', 'createdAt': '2024-07-04T07:26:38.387Z', 'updatedAt': '2024-07-04T07:26:39.035Z', 'number': 91975, 'price': 2415}}"}, {"name": "key", "value": "'name'"}], "start": 1720077999452, "stop": 1720077999452}, {"name": "Проверяем наличие ключа в ответе", "status": "passed", "parameters": [{"name": "response_body", "value": "{'success': True, 'name': 'Spicy бессмертный флюоресцентный бургер', 'order': {'ingredients': [{'_id': '61c0c5a71d1f82001bdaaa6d', 'name': 'Флюоресцентная булка R2-D3', 'type': 'bun', 'proteins': 44, 'fat': 26, 'carbohydrates': 85, 'calories': 643, 'price': 988, 'image': 'https://code.s3.yandex.net/react/code/bun-01.png', 'image_mobile': 'https://code.s3.yandex.net/react/code/bun-01-mobile.png', 'image_large': 'https://code.s3.yandex.net/react/code/bun-01-large.png', '__v': 0}, {'_id': '61c0c5a71d1f82001bdaaa6f', 'name': 'Мясо бессмертных моллюсков Protostomia', 'type': 'main', 'proteins': 433, 'fat': 244, 'carbohydrates': 33, 'calories': 420, 'price': 1337, 'image': 'https://code.s3.yandex.net/react/code/meat-02.png', 'image_mobile': 'https://code.s3.yandex.net/react/code/meat-02-mobile.png', 'image_large': 'https://code.s3.yandex.net/react/code/meat-02-large.png', '__v': 0}, {'_id': '61c0c5a71d1f82001bdaaa72', 'name': 'Соус Spicy-X', 'type': 'sauce', 'proteins': 30, 'fat': 20, 'carbohydrates': 40, 'calories': 30, 'price': 90, 'image': 'https://code.s3.yandex.net/react/code/sauce-02.png', 'image_mobile': 'https://code.s3.yandex.net/react/code/sauce-02-mobile.png', 'image_large': 'https://code.s3.yandex.net/react/code/sauce-02-large.png', '__v': 0}], '_id': '66864eae9ed280001b46055a', 'owner': {'name': 'pqeyeqtqyf', 'email': 'weakidhdox@mail.ru', 'createdAt': '2024-07-04T07:26:38.079Z', 'updatedAt': '2024-07-04T07:26:38.079Z'}, 'status': 'done', 'name': 'Spicy бессмертный флюоресцентный бургер', 'createdAt': '2024-07-04T07:26:38.387Z', 'updatedAt': '2024-07-04T07:26:39.035Z', 'number': 91975, 'price': 2415}}"}, {"name": "key", "value": "'order'"}], "start": 1720077999452, "stop": 1720077999452}, {"name": "Проверяем наличие ключа в ответе", "status": "passed", "parameters": [{"name": "response_body", "value": "{'ingredients': [{'_id': '61c0c5a71d1f82001bdaaa6d', 'name': 'Флюоресцентная булка R2-D3', 'type': 'bun', 'proteins': 44, 'fat': 26, 'carbohydrates': 85, 'calories': 643, 'price': 988, 'image': 'https://code.s3.yandex.net/react/code/bun-01.png', 'image_mobile': 'https://code.s3.yandex.net/react/code/bun-01-mobile.png', 'image_large': 'https://code.s3.yandex.net/react/code/bun-01-large.png', '__v': 0}, {'_id': '61c0c5a71d1f82001bdaaa6f', 'name': 'Мясо бессмертных моллюсков Protostomia', 'type': 'main', 'proteins': 433, 'fat': 244, 'carbohydrates': 33, 'calories': 420, 'price': 1337, 'image': 'https://code.s3.yandex.net/react/code/meat-02.png', 'image_mobile': 'https://code.s3.yandex.net/react/code/meat-02-mobile.png', 'image_large': 'https://code.s3.yandex.net/react/code/meat-02-large.png', '__v': 0}, {'_id': '61c0c5a71d1f82001bdaaa72', 'name': 'Соус Spicy-X', 'type': 'sauce', 'proteins': 30, 'fat': 20, 'carbohydrates': 40, 'calories': 30, 'price': 90, 'image': 'https://code.s3.yandex.net/react/code/sauce-02.png', 'image_mobile': 'https://code.s3.yandex.net/react/code/sauce-02-mobile.png', 'image_large': 'https://code.s3.yandex.net/react/code/sauce-02-large.png', '__v': 0}], '_id': '66864eae9ed280001b46055a', 'owner': {'name': 'pqeyeqtqyf', 'email': 'weakidhdox@mail.ru', 'createdAt': '2024-07-04T07:26:38.079Z', 'updatedAt': '2024-07-04T07:26:38.079Z'}, 'status': 'done', 'name': 'Spicy бессмертный флюоресцентный бургер', 'createdAt': '2024-07-04T07:26:38.387Z', 'updatedAt': '2024-07-04T07:26:39.035Z', 'number': 91975, 'price': 2415}"}, {"name": "key", "value": "'number'"}], "start": 1720077999452, "stop": 1720077999452}], "parameters": [{"name": "ingredient_list", "value": "['61c0c5a71d1f82001bdaaa6d', '61c0c5a71d1f82001bdaaa6f', '61c0c5a71d1f82001bdaaa72']"}, {"name": "auth_token", "value": "'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2ODY0ZWFlOWVkMjgwMDAxYjQ2MDU1OCIsImlhdCI6MTcyMDA3Nzk5OCwiZXhwIjoxNzIwMDc5MTk4fQ.bxlp4d8JloCPp0b3ar_rr-rT_256kw0aLOL2of2Fmlk'"}], "start": 1720077998073, "stop": 1720077999455}, {"name": "Отправляем запрос на получение заказов пользователя", "status": "passed", "steps": [{"name": "Отправляем API-запрос на получение заказов пользователя", "status": "passed", "parameters": [{"name": "headers", "value": "{'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2ODY0ZWFlOWVkMjgwMDAxYjQ2MDU1OCIsImlhdCI6MTcyMDA3Nzk5OCwiZXhwIjoxNzIwMDc5MTk4fQ.bxlp4d8JloCPp0b3ar_rr-rT_256kw0aLOL2of2Fmlk'}"}], "start": 1720077999455, "stop": 1720077999879}], "parameters": [{"name": "auth_token", "value": "'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2ODY0ZWFlOWVkMjgwMDAxYjQ2MDU1OCIsImlhdCI6MTcyMDA3Nzk5OCwiZXhwIjoxNzIwMDc5MTk4fQ.bxlp4d8JloCPp0b3ar_rr-rT_256kw0aLOL2of2Fmlk'"}], "start": 1720077999455, "stop": 1720077999880}, {"name": "Проверяем, что запрос выполнен успешно", "status": "passed", "steps": [{"name": "Проверяем код ответа", "status": "passed", "parameters": [{"name": "response", "value": "<Response [200]>"}, {"name": "expected_code", "value": "200"}], "start": 1720077999880, "stop": 1720077999880}, {"name": "Проверяем значение поля \"success\" в ответе", "status": "passed", "parameters": [{"name": "response", "value": "<Response [200]>"}, {"name": "expected_value", "value": "True"}], "start": 1720077999880, "stop": 1720077999880}], "parameters": [{"name": "response", "value": "<Response [200]>"}], "start": 1720077999880, "stop": 1720077999880}, {"name": "Проверяем в полученном ответе поле \"totalToday\"", "status": "failed", "statusDetails": {"message": "AssertionError: Получено неверное значение ключа \"totalToday\": ожидалось \"1\", получено \"517\"\n", "trace": "  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/lapka/Downloads/Diplom_3/helpers.py\", line 191, in check_received_orders_total_today\n    HelpersOnCheck.check_key_and_value_in_body(received_body, KEYS.TOTAL_TODAY_KEY, amount)\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/lapka/Downloads/Diplom_3/helpers.py\", line 24, in check_key_and_value_in_body\n    assert received_value == value, f'Получено неверное значение ключа \"{key}\": ожидалось \"{value}\", получено \"{received_value}\"'\n"}, "steps": [{"name": "Проверяем значение ключа в ответе", "status": "failed", "statusDetails": {"message": "AssertionError: Получено неверное значение ключа \"totalToday\": ожидалось \"1\", получено \"517\"\n", "trace": "  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/lapka/Downloads/Diplom_3/helpers.py\", line 24, in check_key_and_value_in_body\n    assert received_value == value, f'Получено неверное значение ключа \"{key}\": ожидалось \"{value}\", получено \"{received_value}\"'\n"}, "parameters": [{"name": "response_body", "value": "{'success': True, 'orders': [{'_id': '66864eae9ed280001b46055a', 'ingredients': ['61c0c5a71d1f82001bdaaa6d', '61c0c5a71d1f82001bdaaa6f', '61c0c5a71d1f82001bdaaa72'], 'status': 'done', 'name': 'Spicy бессмертный флюоресцентный бургер', 'createdAt': '2024-07-04T07:26:38.387Z', 'updatedAt': '2024-07-04T07:26:39.035Z', 'number': 91975}], 'total': 91975, 'totalToday': 517}"}, {"name": "key", "value": "'totalToday'"}, {"name": "value", "value": "1"}], "start": 1720077999881, "stop": 1720077999881}], "parameters": [{"name": "received_body", "value": "{'success': True, 'orders': [{'_id': '66864eae9ed280001b46055a', 'ingredients': ['61c0c5a71d1f82001bdaaa6d', '61c0c5a71d1f82001bdaaa6f', '61c0c5a71d1f82001bdaaa72'], 'status': 'done', 'name': 'Spicy бессмертный флюоресцентный бургер', 'createdAt': '2024-07-04T07:26:38.387Z', 'updatedAt': '2024-07-04T07:26:39.035Z', 'number': 91975}], 'total': 91975, 'totalToday': 517}"}, {"name": "amount", "value": "1"}], "start": 1720077999881, "stop": 1720077999882}], "start": 1720077998072, "stop": 1720077999883, "uuid": "6b69fde7-596d-434b-8973-bd6e3bc8b0f3", "historyId": "5f662d0c9596a63a0eed98e2dae44fbd", "testCaseId": "5f662d0c9596a63a0eed98e2dae44fbd", "fullName": "tests.test_get_user_orders.TestGetUserOrders#test_get_user_orders_total_today_authorized_user", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup_ingredients', scope='class')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_get_user_orders"}, {"name": "subSuite", "value": "TestGetUserOrders"}, {"name": "host", "value": "MacBook-Air-Lapka.local"}, {"name": "thread", "value": "7394-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_get_user_orders"}]}